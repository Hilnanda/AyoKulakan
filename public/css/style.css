/*-------------------------------------- 
  Author:      Gabriel Svennerberg 
  Email:       gabriel@svennerberg.com 
  Created:     2010-03-17 
  Description: Stylesheet for example 1 
----------------------------------------*/ 
body { 
  font-size: small; 
  background: #fff; 
  	margin: 0; /* it's good practice to zero the margin and padding of the body element to account for differing browser defaults */
	padding: 0;
background-color: #E5EECF;
} 

#infoWindowAdmin_BPTP {
	height: 150px;
    width: 300px;
}

#infoWindowAdmin_cctv {
	height: 300px;
    width: 260px;
}

#map { 
 
  height: 100%; 
  border: 0px solid #000; 
} 
#chart_div { 
  width: 250px; 
  height: 250px; 
  border: 0px solid #000; 
  
} 
#tulisan { 
  font-family: verdana,sans-serif;
  font-size: 12px;
  line-height: 150%;
  width: 250px; 
  height: 100%; 
  border: 0px solid #000; 
  margin: 5px ;
} 
h1 {
font-family: verdana,sans-serif;
color: #134503;
font-size: 14px;
font-weight: bold;
text-align: justify;
word-spacing: 1.6pt;

}
h3 {
font-family: verdana,sans-serif;
color: #134503;
font-size: 14px;
font-weight: bold;
text-align: justify;
word-spacing: 1pt;
line-height: 150%;
}
h5 {
font-family: verdana,sans-serif;
color: #134503;
font-size: 12px;
font-weight: bold;
text-align: justify;
word-spacing: 1pt;
line-height: 100%;
}
#info { 
  width: 350px; 
} 
   
#info h2 { 
  font-family: verdana,sans-serif;
color: #134503;
font-size: 12px;
font-weight: bold;
text-align: justify;
word-spacing: 1.6pt;
} 
 
#info img { 
  float: left; 
  margin-right: 10px; 
} 
.twoColHybRt #container { 

	width: 99%;  /* this will create a container 80% of the browser width */
	background: #FFFFFF;
	margin: 0 auto; /* the auto margins (in conjunction with a width) center the page */
	border: 0px solid #000000;
	text-align: left; /* this overrides the text-align: center on the body element. */
	background-color: #E5EECF;
} 

/* Tips for sidebar1:
1. Since we are working in relative units, it's best not to use padding on the sidebar. It will be added to the overall width for standards compliant browsers creating an unknown actual width. 
2. Since em units are used for the sidebar value, be aware that its width will vary with different default text sizes.
3. Space between the side of the div and the elements within it can be created by placing a left and right margin on those elements as seen in the ".twoColHybRt #sidebar1 p" rule.
*/
.twoColHybRt #sidebar1 {
height: 50%; 
	float: right; 
	width: 20em; /* since this element is floated, a width must be given */
	background: #E5EECF; /* the background color will be displayed for the length of the content in the column, but no further */
	padding: 0px 0; /* top and bottom padding create visual space within this div  */
	margin: 0;
}
.twoColHybRt #sidebar1 h3, .twoColHybRt #sidebar1 p {
	margin-left: 0px; /* the left and right margin should be given to every element that will be placed in the side columns */
	margin-right: 0px;
	margin: 0;
}

/* Tips for mainContent:
1. The space between the mainContent and sidebar1 is created with the right margin on the mainContent div.  No matter how much content the sidebar1 div contains, the column space will remain. You can remove this right margin if you want the #mainContent div's text to fill the #sidebar1 space when the content in #sidebar1 ends.
2. Be aware it is possible to cause float drop (the dropping of the non-floated mainContent area below the sidebar) if an element wider than it can contain is placed within the mainContent div. WIth a hybrid layout (percentage-based overall width with em-based sidebar), it may not be possible to calculate the exact width available. If the user's text size is larger than average, you will have a wider sidebar div and thus, less room in the mainContent div. You should be aware of this limitation - especially if the client is adding content with Contribute.
3. In the Internet Explorer Conditional Comment below, the zoom property is used to give the mainContent "hasLayout." This may help avoid several IE-specific bugs.
*/
.twoColHybRt #mainContent {
  margin: 0 21em 0 0px; /* the left margin's value is equal to the header and footer which creates alignment down the left side of the document. */
} 

/* Miscellaneous classes for reuse */
.fltrt { /* this class can be used to float an element right in your page. The floated element must precede the element it should be next to on the page. */
	float: right;
	margin-left: 0px;
}
.fltlft { /* this class can be used to float an element left in your page */
	float: left;
	margin-right: 0px;
}
.clearfloat { /* this class should be placed on a div or break element and should be the final element before the close of a container that should fully contain a float */
	clear:both;
    height:0;
    font-size: 0px;
    line-height: 0px;
}